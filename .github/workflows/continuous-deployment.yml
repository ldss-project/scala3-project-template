name: Publish
on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - "README.md"

jobs:
  # Publish the project
  publish:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.GH_TOKEN}}
      GIT_COMMITTER_NAME: Jahrim Gabriele Cesario
      GIT_COMMITTER_EMAIL: jahrim.cesario2@studio.unibo.it
      GIT_AUTHOR_NAME: Jahrim Gabriele Cesario
      GIT_AUTHOR_EMAIL: jahrim.cesario2@studio.unibo.it
      DOCKER_REGISTRY_USER: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_SIGNING_KEY }}
      ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_SIGNING_PASSWORD }}
      ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
      ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
    steps:
      # Install the specified version of Java in the provided runner
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 8
      # Install Node in the provided runner
      - name: Install Node
        uses: actions/setup-node@v3
      # Clone the repository, with full history and submodules
      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
          submodules: recursive
      # Validate the gradle wrapper to void supply chain attacks from pull-request that changes the wrapper
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      # Build the project producing the artifacts
      - name: Build Gradle Project
        run: |
          chmod 777 ./gradlew
          ./gradlew build
      # Publish artifacts on GitHub and Docker
      - name: Publish on GitHub and Docker
        run: |
          npm clean-install
          npx semantic-release
      # Publish artifacts on Maven
      - name: Publish on Maven
        run: ./gradlew publish --no-parallel
